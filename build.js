const fs=require("fs"),shell=require("shelljs"),colors=require("colors"),path=require("path");shell.test("-d","dist")?shell.rm("-rf","dist/*"):shell.mkdir("-p","dist"),console.log(colors.yellow("Copying lib folder to dist...")),shell.cp("-R","src/lib","dist/"),console.log(colors.green("Lib folder copied successfully.")),console.log(colors.yellow("Copying other files from src to dist...")),shell.cp("-R",["src/*","!src/lib"],"dist/"),console.log(colors.green("Other files copied successfully.")),console.log(colors.yellow("Modifying import paths in .js files...")),shell.find("dist").forEach(s=>{if(s.endsWith(".js")&&!s.includes("dist/lib")){let l=fs.readFileSync(s,"utf8");l=l.replace(/import\s+(\w+|\{[^{}]*\})\s+from\s+(['"])(\.{1,2}\/[^'"]+)\2/g,(s,l,e,o)=>o.endsWith(".min.js")||o.endsWith(".min")?s:s.replace(o,`${o}.min.js`)),fs.writeFileSync(s,l,"utf8")}}),console.log(colors.green("Import paths modified successfully.")),console.log(colors.yellow("Minifying .js files...")),shell.ls("dist/**/*.js").forEach(s=>{if(!s.endsWith(".min.js")&&!s.includes("dist/lib")){const l=path.dirname(s),e=path.basename(s,".js"),o=path.join(l,`${e}.min.js`);shell.mkdir("-p",path.dirname(o));const i=shell.exec(`terser ${s} -o ${o} --compress --mangle`);0!==i.code?console.log(colors.red(`Failed to minify ${s}: ${i.stderr}`)):console.log(colors.green(`Successfully minified ${s} to ${o}`))}}),console.log(colors.green("Minification completed.")),console.log(colors.yellow("Deleting non-minified .js files...")),shell.ls("dist/**/*").forEach(s=>{!s.endsWith(".js")||s.endsWith(".min.js")||s.includes("dist/lib")||shell.rm(s)}),console.log(colors.green("Non-minified .js files deleted.")),console.log(colors.green.bold("All tasks completed successfully!"));